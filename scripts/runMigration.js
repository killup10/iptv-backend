import dotenv from 'dotenv';
import migrateMoviesToSeries from './migrateMoviesToSeries.js';

// Cargar variables de entorno
dotenv.config();

console.log('üîß Script de migraci√≥n de pel√≠culas a series');
console.log('==========================================');
console.log('Este script convertir√° autom√°ticamente las pel√≠culas individuales');
console.log('que siguen el formato "1x11 T√≠tulo" en series agrupadas con cap√≠tulos.');
console.log('');

// Funci√≥n para confirmar la ejecuci√≥n
const confirmExecution = () => {
  return new Promise((resolve) => {
    const readline = require('readline');
    const rl = readline.createInterface({
      input: process.stdin,
      output: process.stdout
    });

    rl.question('¬øEst√°s seguro de que quieres ejecutar la migraci√≥n? (s√≠/no): ', (answer) => {
      rl.close();
      resolve(answer.toLowerCase() === 's√≠' || answer.toLowerCase() === 'si' || answer.toLowerCase() === 'yes');
    });
  });
};

const runMigration = async () => {
  try {
    console.log('‚ö†Ô∏è  ADVERTENCIA: Esta operaci√≥n modificar√° la base de datos');
    console.log('‚ö†Ô∏è  Se recomienda hacer un backup antes de continuar');
    console.log('');
    
    const confirmed = await confirmExecution();
    
    if (!confirmed) {
      console.log('‚ùå Migraci√≥n cancelada por el usuario');
      process.exit(0);
    }

    console.log('üöÄ Iniciando migraci√≥n...');
    await migrateMoviesToSeries();
    
    console.log('‚úÖ Migraci√≥n completada exitosamente');
    process.exit(0);
    
  } catch (error) {
    console.error('‚ùå Error durante la migraci√≥n:', error);
    process.exit(1);
  }
};

runMigration();
